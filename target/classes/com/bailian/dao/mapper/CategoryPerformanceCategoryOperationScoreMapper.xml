<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bailian.dao.CategoryPerformanceCategoryOperationScoreMapper" >
  <resultMap id="BaseResultMap" type="com.bailian.model.CategoryPerformanceCategoryOperationScore" >
    <id column="category_sid" property="categorySid" jdbcType="INTEGER" />
    <id column="level" property="level" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="stock_sku_rate" property="stockSkuRate" jdbcType="DOUBLE" />
    <result column="ave_prop_fill_rate" property="avePropFillRate" jdbcType="DOUBLE" />
    <result column="ave_price_adjustment_time" property="avePriceAdjustmentTime" jdbcType="DOUBLE" />
    <result column="ave_on_off_shelf_time" property="aveOnOffShelfTime" jdbcType="DOUBLE" />
    <result column="shelf_sale_ratio" property="shelfSaleRatio" jdbcType="DOUBLE" />
    <result column="out_of_stock_score" property="outOfStockScore" jdbcType="DOUBLE" />
    <result column="prop_fill_score" property="propFillScore" jdbcType="DOUBLE" />
    <result column="price_adj_score" property="priceAdjScore" jdbcType="DOUBLE" />
    <result column="off_shelf_score" property="offShelfScore" jdbcType="DOUBLE" />
    <result column="stock_sale_ratio_score" property="stockSaleRatioScore" jdbcType="DOUBLE" />
    <result column="oper_score" property="operScore" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    category_sid, level, category_name, stock_sku_rate, ave_prop_fill_rate, ave_price_adjustment_time, 
    ave_on_off_shelf_time, shelf_sale_ratio, out_of_stock_score, prop_fill_score, price_adj_score, 
    off_shelf_score, stock_sale_ratio_score, oper_score
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScoreKey" >
    select 
    <include refid="Base_Column_List" />
    from bl_category_performance_category_operation_score
    where category_sid = #{categorySid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScoreKey" >
    delete from bl_category_performance_category_operation_score
    where category_sid = #{categorySid,jdbcType=INTEGER}
      and level = #{level,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScore" >
    insert into bl_category_performance_category_operation_score (category_sid, level, category_name, 
      stock_sku_rate, ave_prop_fill_rate, ave_price_adjustment_time, 
      ave_on_off_shelf_time, shelf_sale_ratio, out_of_stock_score, 
      prop_fill_score, price_adj_score, off_shelf_score, 
      stock_sale_ratio_score, oper_score)
    values (#{categorySid,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
      #{stockSkuRate,jdbcType=DOUBLE}, #{avePropFillRate,jdbcType=DOUBLE}, #{avePriceAdjustmentTime,jdbcType=DOUBLE}, 
      #{aveOnOffShelfTime,jdbcType=DOUBLE}, #{shelfSaleRatio,jdbcType=DOUBLE}, #{outOfStockScore,jdbcType=DOUBLE}, 
      #{propFillScore,jdbcType=DOUBLE}, #{priceAdjScore,jdbcType=DOUBLE}, #{offShelfScore,jdbcType=DOUBLE}, 
      #{stockSaleRatioScore,jdbcType=DOUBLE}, #{operScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScore" >
    insert into bl_category_performance_category_operation_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="categorySid != null" >
        category_sid,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="stockSkuRate != null" >
        stock_sku_rate,
      </if>
      <if test="avePropFillRate != null" >
        ave_prop_fill_rate,
      </if>
      <if test="avePriceAdjustmentTime != null" >
        ave_price_adjustment_time,
      </if>
      <if test="aveOnOffShelfTime != null" >
        ave_on_off_shelf_time,
      </if>
      <if test="shelfSaleRatio != null" >
        shelf_sale_ratio,
      </if>
      <if test="outOfStockScore != null" >
        out_of_stock_score,
      </if>
      <if test="propFillScore != null" >
        prop_fill_score,
      </if>
      <if test="priceAdjScore != null" >
        price_adj_score,
      </if>
      <if test="offShelfScore != null" >
        off_shelf_score,
      </if>
      <if test="stockSaleRatioScore != null" >
        stock_sale_ratio_score,
      </if>
      <if test="operScore != null" >
        oper_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="categorySid != null" >
        #{categorySid,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="stockSkuRate != null" >
        #{stockSkuRate,jdbcType=DOUBLE},
      </if>
      <if test="avePropFillRate != null" >
        #{avePropFillRate,jdbcType=DOUBLE},
      </if>
      <if test="avePriceAdjustmentTime != null" >
        #{avePriceAdjustmentTime,jdbcType=DOUBLE},
      </if>
      <if test="aveOnOffShelfTime != null" >
        #{aveOnOffShelfTime,jdbcType=DOUBLE},
      </if>
      <if test="shelfSaleRatio != null" >
        #{shelfSaleRatio,jdbcType=DOUBLE},
      </if>
      <if test="outOfStockScore != null" >
        #{outOfStockScore,jdbcType=DOUBLE},
      </if>
      <if test="propFillScore != null" >
        #{propFillScore,jdbcType=DOUBLE},
      </if>
      <if test="priceAdjScore != null" >
        #{priceAdjScore,jdbcType=DOUBLE},
      </if>
      <if test="offShelfScore != null" >
        #{offShelfScore,jdbcType=DOUBLE},
      </if>
      <if test="stockSaleRatioScore != null" >
        #{stockSaleRatioScore,jdbcType=DOUBLE},
      </if>
      <if test="operScore != null" >
        #{operScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScore" >
    update bl_category_performance_category_operation_score
    <set >
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="stockSkuRate != null" >
        stock_sku_rate = #{stockSkuRate,jdbcType=DOUBLE},
      </if>
      <if test="avePropFillRate != null" >
        ave_prop_fill_rate = #{avePropFillRate,jdbcType=DOUBLE},
      </if>
      <if test="avePriceAdjustmentTime != null" >
        ave_price_adjustment_time = #{avePriceAdjustmentTime,jdbcType=DOUBLE},
      </if>
      <if test="aveOnOffShelfTime != null" >
        ave_on_off_shelf_time = #{aveOnOffShelfTime,jdbcType=DOUBLE},
      </if>
      <if test="shelfSaleRatio != null" >
        shelf_sale_ratio = #{shelfSaleRatio,jdbcType=DOUBLE},
      </if>
      <if test="outOfStockScore != null" >
        out_of_stock_score = #{outOfStockScore,jdbcType=DOUBLE},
      </if>
      <if test="propFillScore != null" >
        prop_fill_score = #{propFillScore,jdbcType=DOUBLE},
      </if>
      <if test="priceAdjScore != null" >
        price_adj_score = #{priceAdjScore,jdbcType=DOUBLE},
      </if>
      <if test="offShelfScore != null" >
        off_shelf_score = #{offShelfScore,jdbcType=DOUBLE},
      </if>
      <if test="stockSaleRatioScore != null" >
        stock_sale_ratio_score = #{stockSaleRatioScore,jdbcType=DOUBLE},
      </if>
      <if test="operScore != null" >
        oper_score = #{operScore,jdbcType=DOUBLE},
      </if>
    </set>
    where category_sid = #{categorySid,jdbcType=INTEGER}
      and level = #{level,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bailian.model.CategoryPerformanceCategoryOperationScore" >
    update bl_category_performance_category_operation_score
    set category_name = #{categoryName,jdbcType=VARCHAR},
      stock_sku_rate = #{stockSkuRate,jdbcType=DOUBLE},
      ave_prop_fill_rate = #{avePropFillRate,jdbcType=DOUBLE},
      ave_price_adjustment_time = #{avePriceAdjustmentTime,jdbcType=DOUBLE},
      ave_on_off_shelf_time = #{aveOnOffShelfTime,jdbcType=DOUBLE},
      shelf_sale_ratio = #{shelfSaleRatio,jdbcType=DOUBLE},
      out_of_stock_score = #{outOfStockScore,jdbcType=DOUBLE},
      prop_fill_score = #{propFillScore,jdbcType=DOUBLE},
      price_adj_score = #{priceAdjScore,jdbcType=DOUBLE},
      off_shelf_score = #{offShelfScore,jdbcType=DOUBLE},
      stock_sale_ratio_score = #{stockSaleRatioScore,jdbcType=DOUBLE},
      oper_score = #{operScore,jdbcType=DOUBLE}
    where category_sid = #{categorySid,jdbcType=INTEGER}
      and level = #{level,jdbcType=INTEGER}
  </update>
</mapper>