<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bailian.dao.CategoryPerformanceScoreMapper" >
  <resultMap id="BaseResultMap" type="com.bailian.model.CategoryPerformanceScore" >
    <id column="category_sid" property="categorySid" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="parent_sid" property="parentSid" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
    <result column="ranking_change" property="rankingChange" jdbcType="INTEGER" />
    <result column="sales_volume" property="salesVolume" jdbcType="DOUBLE" />
    <result column="drainage" property="drainage" jdbcType="DOUBLE" />
    <result column="configuration" property="configuration" jdbcType="DOUBLE" />
    <result column="operation" property="operation" jdbcType="DOUBLE" />
    <result column="performance" property="performance" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    category_sid, category_name, parent_sid, level, rank, ranking_change, sales_volume, 
    drainage, configuration, operation, performance
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bl_category_performance_score
    where category_sid = #{categorySid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bl_category_performance_score
    where category_sid = #{categorySid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bailian.model.CategoryPerformanceScore" >
    insert into bl_category_performance_score (category_sid, category_name, parent_sid, 
      level, rank, ranking_change, 
      sales_volume, drainage, configuration, 
      operation, performance)
    values (#{categorySid,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{parentSid,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, #{rankingChange,jdbcType=INTEGER}, 
      #{salesVolume,jdbcType=DOUBLE}, #{drainage,jdbcType=DOUBLE}, #{configuration,jdbcType=DOUBLE}, 
      #{operation,jdbcType=DOUBLE}, #{performance,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.bailian.model.CategoryPerformanceScore" >
    insert into bl_category_performance_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="categorySid != null" >
        category_sid,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="parentSid != null" >
        parent_sid,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="rankingChange != null" >
        ranking_change,
      </if>
      <if test="salesVolume != null" >
        sales_volume,
      </if>
      <if test="drainage != null" >
        drainage,
      </if>
      <if test="configuration != null" >
        configuration,
      </if>
      <if test="operation != null" >
        operation,
      </if>
      <if test="performance != null" >
        performance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="categorySid != null" >
        #{categorySid,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="parentSid != null" >
        #{parentSid,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="rankingChange != null" >
        #{rankingChange,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null" >
        #{salesVolume,jdbcType=DOUBLE},
      </if>
      <if test="drainage != null" >
        #{drainage,jdbcType=DOUBLE},
      </if>
      <if test="configuration != null" >
        #{configuration,jdbcType=DOUBLE},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=DOUBLE},
      </if>
      <if test="performance != null" >
        #{performance,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bailian.model.CategoryPerformanceScore" >
    update bl_category_performance_score
    <set >
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="parentSid != null" >
        parent_sid = #{parentSid,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="rankingChange != null" >
        ranking_change = #{rankingChange,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null" >
        sales_volume = #{salesVolume,jdbcType=DOUBLE},
      </if>
      <if test="drainage != null" >
        drainage = #{drainage,jdbcType=DOUBLE},
      </if>
      <if test="configuration != null" >
        configuration = #{configuration,jdbcType=DOUBLE},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=DOUBLE},
      </if>
      <if test="performance != null" >
        performance = #{performance,jdbcType=DOUBLE},
      </if>
    </set>
    where category_sid = #{categorySid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bailian.model.CategoryPerformanceScore" >
    update bl_category_performance_score
    set category_name = #{categoryName,jdbcType=VARCHAR},
      parent_sid = #{parentSid,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      ranking_change = #{rankingChange,jdbcType=INTEGER},
      sales_volume = #{salesVolume,jdbcType=DOUBLE},
      drainage = #{drainage,jdbcType=DOUBLE},
      configuration = #{configuration,jdbcType=DOUBLE},
      operation = #{operation,jdbcType=DOUBLE},
      performance = #{performance,jdbcType=DOUBLE}
    where category_sid = #{categorySid,jdbcType=INTEGER}
  </update>

  <select id="listPageScore" resultMap="BaseResultMap">
    select * from bl_category_performance_score
    <where>
      <if test="categorySid != null" >
        category_sid = #{categorySid,jdbcType=INTEGER}
      </if>
      <if test="level != null">
        AND level = #{level, jdbcType=INTEGER}
      </if>
      <if test="parentSid != null">
        AND parent_sid = #{parentSid,jdbcType=INTEGER}
      </if>
    </where>
    <if test="columnOrder != null">
      ORDER BY ${columnOrder}
    </if>
  </select>
</mapper>